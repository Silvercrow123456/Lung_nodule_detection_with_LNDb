# -*- coding: utf-8 -*-
"""gray_conv.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CHUNzFOV_0fXcAlf2relShiQiqfCReY8
"""

#### Mainline extract images (gray_conv)
def gray_conv(s):
     I8 = (((s - s.min()) / (s.max() - s.min())) * 255.9).astype(np.uint8)
     img = Image.fromarray(I8)
     return img

#Extract, pre-process and save 2D slice with nodule
# Read nodules csv
csvlines = readCsv('/content/gdrive/MyDrive/training_data_lung_nodule/trainNodules.csv')
header = csvlines[0]
nodules = csvlines[1:]

for n in nodules:
     lnd = int(n[header.index('LNDbID')])
     rad = int(n[header.index('RadID')])
     finding = int(n[header.index('FindingID')])

     if int(n[header.index('LNDbID')])==lnd and int(n[header.index('RadID')])==rad and int(n[header.index('FindingID')])==finding:
         ctr = np.array([float(n[header.index('x')]), float(n[header.index('y')]), float(n[header.index('z')])])
         class_label = np.array([int(n[header.index('Nodule')])])

         name = lnd
     if name in confirmed.index:

         [scan,spacing,origin,transfmat] = readMhd(f'/content/gdrive/MyDrive/training_data_lung_nodule/train/LNDb-{lnd:04}.mhd'.format(lnd=lnd))
         transfmat_toimg,transfmat_toworld = getImgWorldTransfMats(spacing,transfmat)
         ctr = convertToImgCoord(ctr,origin,transfmat_toimg)

         # 2D slice with nodule center
         scan_slice = scan[int(ctr[2])]
         scan_slice_conv = gray_conv(scan_slice)

         # Previous slice
         scan_slice_previous = scan[int(ctr[2])-1]
         scan_slice_pre_conv = gray_conv(scan_slice_previous)

         # Next slice
         scan_slice_next = scan[int(ctr[2])+1]
         scan_slice_next_conv = gray_conv(scan_slice_next)

         R = np.stack((scan_slice_pre_conv, scan_slice_conv, scan_slice_next_conv), axis=2)
         img = Image.fromarray(R)
         img.save(f'/content/train_jpg/gray_conv/LNDb-{lnd:04d}_finding{finding}_rad{rad}.jpg'.format(lnd=lnd,finding=finding,rad=rad))